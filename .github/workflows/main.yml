name: Deploy To EC2

on:
  push:
    branches: [ "main" ]

env:
  BASE_RESOURCE_PATH: ./src/main/resources/application-prod.yml

permissions:
  contents: write
  packages: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      # [0] JDK 세팅
      - name: Github Repository 파일 불러오기
        uses: actions/checkout@v4
      - name: JDK 17버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      # [1] Yml 세팅
      - name: application-prod.yml 파일 생성
        run: |
          mkdir -p ./src/main/resources
          echo "${{ secrets.APPLICATION_PROD }}" | base64 --decode > ./src/main/resources/application-prod.yml

      # [2] Gradle build
      - name: Gradle Build
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test

      # [3] Docker build
      - name: Docker 이미지 생성
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/team3:latest .

      # [4] Docker hub login
      - name: docker hub login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # [5] Docker hub push
      - name: docker Hub push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/team3:latest

      # [5] Deploy to server
      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PEM_KEY }}
          script: |
            cd /home/ec2-user/backend
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/team3:latest
            docker stop team3 || true
            docker rm team3 || true
            docker run -d \
              --name team3 \
              -p 8080:8080 \
              ${{ secrets.DOCKERHUB_USERNAME }}/team3:latest